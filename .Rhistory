library(runjags)
library(tidyverse)
library(data.table)
library(lubridate)
library(tidyverse)
library(geosphere)
filter<-dplyr::filter
select<-dplyr::select
library(MCMCvis)
library(RMark)
library(stringr)
setwd("C:/STEFFEN/OneDrive - Vogelwarte/General/ANALYSES/LittleOwlSurvival")
LIOWch<-convert.inp(inp.filename='1st year.inp',
group.df=data.frame(year=c("2009","2010","2011")),
covariates = c('Male MS group','Age on Aug 1st','oldest residual.weight','oldest residual.tarsus'),
use.comments = TRUE)
str(LIOWch)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# CREATE INPUT DATA FOR JAGS
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
N.occ<-nchar(LIOWch$ch[1])
### EXTRACT COLUMN VALUES INTO numeric vectors
y <- data.frame(str_split_fixed(LIOWch$ch, "", N.occ)) %>% mutate_at(1:N.occ,as.numeric)
CH<-as.matrix(y, dimnames=F)
year <- as.numeric(LIOWch$year)-2008
season<-c(rep(1,6),rep(2,10),rep(3,5),rep(4,2)) ## Dispersal x 6, Winter x 10, Incubation x 5, Brood rearing x 2
sex <- LIOWch[,4]
age <- LIOWch[,5]   # age in days on 1 Aug
agemat<-CH
agemat[,1]<-age
for(col in 2:N.occ){
agemat[,col]<-agemat[,col-1]+14
}
age_scale<-scale(agemat)
weight <- LIOWch[,6] # residual weight (seems to be standardized already)
size <- LIOWch[,7] # residual tarsus (seems to be standardized already)
# Create vector with occasion of marking
get.first <- function(x) min(which(x!=0))
f <- apply(CH, 1, get.first)
library(runjags)
library(tidyverse)
library(data.table)
library(lubridate)
library(tidyverse)
library(geosphere)
filter<-dplyr::filter
select<-dplyr::select
library(MCMCvis)
library(RMark)
library(stringr)
library(R2jags)
setwd("C:/STEFFEN/OneDrive - Vogelwarte/General/ANALYSES/LittleOwlSurvival")
LIOWch<-convert.inp(inp.filename='1st year.inp',
group.df=data.frame(year=c("2009","2010","2011")),
covariates = c('Male MS group','Age on Aug 1st','oldest residual.weight','oldest residual.tarsus'),
use.comments = TRUE)
str(LIOWch)
wincov<-fread("LIOW_winter_covariates.csv")
head(wincov)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# CREATE INPUT DATA FOR JAGS
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
N.occ<-nchar(LIOWch$ch[1])
### EXTRACT COLUMN VALUES INTO numeric vectors
y <- data.frame(str_split_fixed(LIOWch$ch, "", N.occ)) %>% mutate_at(1:N.occ,as.numeric)
CH<-as.matrix(y, dimnames=F)
year <- as.numeric(LIOWch$year)-2008
season<-c(rep(1,6),rep(2,10),rep(3,5),rep(4,2)) ## Dispersal x 6, Winter x 10, Incubation x 5, Brood rearing x 2
winter<-ifelse(season==2,1,0) ## binary variable for winter
sex <- LIOWch[,4]
age <- LIOWch[,5]   # age in days on 1 Aug
agemat<-CH
agemat[,1]<-age
for(col in 2:N.occ){
agemat[,col]<-agemat[,col-1]+14
}
age_scale<-scale(agemat)
weight <- LIOWch[,6] # residual weight (seems to be standardized already)
size <- LIOWch[,7] # residual tarsus (seems to be standardized already)
# Create vector with occasion of marking
get.first <- function(x) min(which(x!=0))
f <- apply(CH, 1, get.first)
### PREPARE WINTER COVARIATES
allcov<-wincov %>% gather(key="variable", value="value",-occ,-year) %>%
spread(key=occ, value=value) %>%
arrange(variable,year)
unique(allcov$snow)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# CREATE MATRIX FOR RECAPTURE PROBS
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# 1 - general recap prob
# 2 - limited effort: 15-18 in 2009, and 11 and 16 in 2010
# 3 - zero in 14, 19, 20 and 21 in 2009 because no field effort at all
recap.mat<-matrix(1, nrow=nrow(CH),ncol=ncol(CH))
recap.mat[year==1,c(15,16,17,18)] <- 2
recap.mat[year==2,c(11,16)] <- 2
recap.mat[year==1,c(14,19,20,21)] <- 3
# Bundle data
# Function to create a matrix with information about known latent state z
known.state.cjs <- function(ch){
state <- ch
for (i in 1:dim(ch)[1]){
n1 <- min(which(ch[i,]==1))
n2 <- max(which(ch[i,]==1))
state[i,n1:n2] <- 1
state[i,n1] <- NA
}
state[state==0] <- NA
return(state)
}
INPUT <- list(y = CH, f = f,
nind = dim(CH)[1],
n.occasions = dim(CH)[2],
z = known.state.cjs(CH),
recap.mat=recap.mat,
season=season,
age=age_scale,
size=size,
year=as.numeric(year),#weight=weight,
env=as.matrix((allcov %>% dplyr::filter(variable=="day.snow.cover3"))[,3:25]))  ### select any of the winter covariates
#rain=as.matrix((allcov %>% dplyr::filter(variable=="total.precip"))[,3:25]))  ### select any of the winter covariates
# Initial values
# Function to create a matrix of initial values for latent state z
cjs.init.z <- function(ch,f){
for (i in 1:dim(ch)[1]){
if (sum(ch[i,])==1) next
n2 <- max(which(ch[i,]==1))
ch[i,f[i]:n2] <- NA
}
for (i in 1:dim(ch)[1]){
ch[i,1:f[i]] <- NA
}
return(ch)
}
inits <- function(){list(z = cjs.init.z(CH, f), mean.phi = runif(4, 0, 1), mean.p = runif(2, 0, 1), sigma = runif(1, 0, 2))}
# Parameters monitored
parameters <- c("mu","mean.phi", "mean.p", "beta.yr","beta.win","beta.p.win","deviance","fit","fit.rep")
# MCMC settings
nt <- 6
nb <- 200
nc <- 3
nad<-100
ns<-2000
ni=3500
# Call JAGS from R
full.model <- run.jags(data=INPUT, inits=inits, monitor=parameters,
model="C:/Users/sop/OneDrive - Vogelwarte/General/ANALYSES/LittleOwlSurvival/LIOW_CJS_model_p_var_reduced.jags",
n.chains = nc, thin = nt, burnin = nb, adapt = nad,sample = ns,
method = "rjparallel")
full.model <- run.jags(data=INPUT, inits=inits, monitor=parameters,
model="C:/STEFFEN/OneDrive - Vogelwarte/General/ANALYSES/LittleOwlSurvival/LIOW_CJS_model_p_var_reduced.jags",
n.chains = nc, thin = nt, burnin = nb, adapt = nad,sample = ns,
method = "rjparallel")

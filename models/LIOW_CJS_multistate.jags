
# multi-state model for little owls:
# effect of winter snow on seasonal survival

## CH.ms: observation history matrix (nind x nocc) with the observations
## first: date of deploying radio tag (= first marking)
## nocc: number of capture occasions (months)

# predictors:
## sex: vector of length nind with values 1, 2 and NA
## feeding: whether chicks were fed or not
## weight: whether chicks were fed or not
## season: 4 seasons summer,autumn, winter, spring
## year: 1, 2, 3
## env: winter snow cover

# states:
#1 = alive inside the study area
#2 = freshly dead inside the study area
#3 = dead or emigrated

# observations:
#1 = observed inside the study area
#2 = found freshly dead
#3 = not seen nor found


model{

  ## transition probabilities
for(i in 1:nind){

  for(t in first[i]:(last[i]-1)){
  ps[1,i,t,1] <- phi[i,t]
  ps[1,i,t,2] <- (1-phi[i,t])*p2[i,t]
  ps[1,i,t,3] <- (1-phi[i,t])*(1-p2[i,t])

  ps[2,i,t,1] <- 0
  ps[2,i,t,2] <- 0
  ps[2,i,t,3] <- 1
 
  ps[3,i,t,1] <- 0
  ps[3,i,t,2] <- 0
  ps[3,i,t,3] <- 1

## observation matrix
  
  po[1,i,t,1] <- p1[i,t]
  po[1,i,t,2] <- 0
  po[1,i,t,3] <- 1-p1[i,t]

  po[2,i,t,1] <- 0
  po[2,i,t,2] <- 1
  po[2,i,t,3] <- 0

  po[3,i,t,1] <- 0
  po[3,i,t,2] <- 0
  po[3,i,t,3] <- 1
  
  } # t
} # i

  ## likelihood

  ## z is the matrix, indicating the state of individual i at time t 
  ## obs is the observation matrix
  for(i in 1:nind){
   z[i,first[i]]<-1 #latent variable for first occasion
   for(t in (first[i]+1):last[i]) {   
      z[i,t] ~ dcat(ps[z[i,t-1], i, t-1,])
      obs[i,t] ~ dcat(po[z[i,t], i, t-1,])
    }
  }

#   md ~ dcat(pmd[1:50]) 
#   moonrad <- moonradData[,md]
#  ## use one 'moonrad' from a matrix of 50 posterior draws from lunar cycle model
# 
#   ## linear predictors
#   for(i in 1:nind){
#     ## impute unknown sexes
#      sex[i] ~ dcat(propsex[1:2])
#     
#     for(t in first[i]:(last[i]-1)){
#     
#     ## survival probability depends on lunar cycle at departure, sex, season, year
#                 
#     logit(s[i,t]) <- c0[sex[i],season[t],year[i]] + 
#                      c1[sex[i],season[t]] * sin(moonrad[i]) +
#                      c2[sex[i],season[t]] * cos(moonrad[i])
#     # c1[sex[i],season[t]] * dist[i] # alternative model - depend on distance moved
#     #logit(f[i,t])<-f0[sex[i]]
#  
#     ## detection probability depends
#     ## months and year (effort assigned by month/years)
#    # logit(p1[i,t]) <- a01[effort[year[i],t]]
#     p1[i,t] <- p01
#   #  logit(p2[i,t]) <- a02[effort[year[i],t]]
#    p2[i,t] <- p02
#     }
#   }
# 
#   ## priors
# 
#   propsex[1:2] ~ ddirch(alpha[1:2]) 
#     # Dirichlet distribution. sex is coded as 1 = f, 2 = m
# 
#   pmd[1:50] ~  ddirch(alpha2[1:50]) 
#   
#   c0[1,1,1] ~ dunif(logit(0.50),logit(0.999))
#   c0[1,1,2] ~ dunif(logit(0.50),logit(0.999))
#   c0[1,1,3] ~ dunif(logit(0.50),logit(0.999))
# 
#   c0[1,2,1] ~ dunif(logit(0.50),logit(0.999))
#   c0[1,2,2] ~ dunif(logit(0.50),logit(0.999))
#   c0[1,2,3] ~ dunif(logit(0.50),logit(0.999))
# 
#   c0[2,1,1] ~ dunif(logit(0.50),logit(0.999))
#   c0[2,1,2] ~ dunif(logit(0.50),logit(0.999))
#   c0[2,1,3] ~ dunif(logit(0.50),logit(0.999))
# 
#   c0[2,2,1] ~ dunif(logit(0.50),logit(0.999))
#   c0[2,2,2] ~ dunif(logit(0.50),logit(0.999))
#   c0[2,2,3] ~ dunif(logit(0.50),logit(0.999))
# 
#   c1[1,1] ~ dnorm(0, 0.44)
#   c1[1,2] ~ dnorm(0, 0.44)
#   c1[2,1] ~ dnorm(0, 0.44)
#   c1[2,2] ~ dnorm(0, 0.44)
# 
#   c2[1,1] ~ dnorm(0, 0.44)
#   c2[1,2] ~ dnorm(0, 0.44)
#   c2[2,1] ~ dnorm(0, 0.44)
#   c2[2,2] ~ dnorm(0, 0.44)
#  
# 
# 
# p01 ~ dunif (0,1)
# p02 ~ dunif (0,1)

##################
# Priors and constraints
for (i in 1:nind){
   for (t in first[i]:last[i]){
      logit(phi[i,t]) <- mu[season[t]] +
                        beta.mass*weight[i]*pf[t] +
                        beta.feed*feeding[i]*pf[t] + 
                        beta.win*env[year[i],t] +
                        beta.male*sex[i]*pf[t]
      logit(p1[i,t]) <- mu.p[1]*recap.mat[i,t] + beta.p.win*env[year[i],t] + epsilon.p1[i]
      logit(p2[i,t]) <- mu.p[2]*recap.mat[i,t] + beta.p.win*env[year[i],t] + epsilon.p2[i]
      } #t
   } #i
for (i in 1:nind){
   epsilon.p1[i] ~ dnorm(0, tau.p)
   epsilon.p2[i] ~ dnorm(0, tau.p)
}
   
  for (s in 1:4){   ### baseline for the 4 seasons post-fledging dispersal, winter, breeding
   mean.phi[s] ~ dbeta(95, 10)                   # Prior for mean biweekly survival from Thorup et al. 2013, converted to beta
   mu[s] <- log(mean.phi[s] / (1-mean.phi[s]))       # Logit transformation
  }
   
   mean.p[1] ~ dunif(0, 1)                  # Prior for mean recapture ALIVE
   mean.p[2] ~ dunif(0, 1)                  # Prior for recovery probability of DEAD bird
   for (y in 1:2) {
    mu.p[y] <- log(mean.p[y] / (1-mean.p[y]))       # Logit transformation 
   }

sigma.p ~ dunif(0, 2)                      # Prior for standard deviation for random detection effect
tau.p <- pow(sigma.p, -2)

beta.mass ~ dnorm(0, 1)                     # Prior for mass effect
beta.male ~ dnorm(0, 1)                     # Prior for sex effect (for males, females are 0)
beta.win ~ dunif(-2, 2)                     # Prior for winter weather effect, which we know is negative
beta.p.win ~ dnorm(0, 1)                     # Prior for winter weather DETECTION effect
beta.feed ~ dnorm(0, 1)                # Prior for effect of supplementary feeding

}

